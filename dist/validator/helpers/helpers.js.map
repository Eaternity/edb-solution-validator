{"version":3,"sources":["../../../src/validator/helpers/helpers.js"],"names":["addFilename","product","filename","Object","assign","isValidProductFilename","filenameRegEx","test","_loadProduct","pathToProduct","split","pop","readFileSync","curriedLoadProduct","loadProduct","_loadAllProducts","dataDir","filenames","readdirSync","prods","filter","map","curriedLoadAllProducts","loadAllProducts","loadFaos","faos","loadNutrs","nutrs","loadNutrChange","nutrChange","loadProductSchema","removeHelperFields","cleanCopy","validationSummary","resetValidation","_saveProduct","cleanProduct","writeFileSync","spaces","curriedSaveProduct","saveProduct","saveAllProducts","_saveAllProductsToCsv","fields","result","data","saveAllProductsToCsv"],"mappings":"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","file":"helpers.js","sourcesContent":["import fs from 'fs'\nimport jsonfile from 'jsonfile'\nimport {curry} from 'ramda'\nimport json2csv from 'json2csv'\n\nexport const addFilename = (product, filename) => {\n  if (product) {\n    return Object.assign({}, product, {filename})\n  }\n}\n\nexport const isValidProductFilename = filename => {\n  // http://regexr.com/ is awesome!\n  const filenameRegEx = /^\\d.+(prod\\.json)/g\n  return filenameRegEx.test(filename)\n}\n\nconst _loadProduct = (addFilename, pathToProduct) => {\n  const filename = pathToProduct.split('/').pop()\n  if (isValidProductFilename(filename)) {\n    const product = jsonfile.readFileSync(pathToProduct)\n    return addFilename(product, filename)\n  }\n}\n\nconst curriedLoadProduct = curry(_loadProduct)\nexport const loadProduct = curriedLoadProduct(addFilename)\n\nconst _loadAllProducts = (isValidProductFilename, dataDir) => {\n  const filenames = fs.readdirSync(`${dataDir}/prods`)\n  const prods = filenames\n    .filter(filename => isValidProductFilename(filename))\n    .map(filename => {\n      const pathToProduct = `${dataDir}/prods/${filename}`\n      const product = loadProduct(pathToProduct)\n      return product\n    })\n\n  return prods\n}\n\nconst curriedLoadAllProducts = curry(_loadAllProducts)\nexport const loadAllProducts = curriedLoadAllProducts(isValidProductFilename)\n\nexport const loadFaos = dataDir => {\n  const faos = jsonfile.readFileSync(`${dataDir}/fao-product-list.json`)\n  return faos\n}\n\nexport const loadNutrs = dataDir => {\n  const filenames = fs.readdirSync(`${dataDir}/nutrs`)\n  const nutrs = filenames\n    .filter(filename => {\n      const filenameRegEx = /^.+(nutr\\.json)/g\n      return filenameRegEx.test(filename)\n    })\n    .map(filename => jsonfile.readFileSync(`${dataDir}/nutrs/${filename}`))\n\n  return nutrs\n}\n\nexport const loadNutrChange = dataDir => {\n  const filenames = fs.readdirSync(`${dataDir}/nutr-change`)\n  const nutrChange = filenames\n    .filter(filename => {\n      const filenameRegEx = /^.+(nutr-change\\.json)/g\n      return filenameRegEx.test(filename)\n    })\n    .map(filename =>\n      jsonfile.readFileSync(`${dataDir}/nutr-change/${filename}`)\n    )\n\n  return nutrChange\n}\n\nexport const loadProductSchema = dataDir => {\n  return jsonfile.readFileSync(`${dataDir}/prod.schema.json`)\n}\n\nexport const removeHelperFields = product => {\n  const cleanCopy = {...product}\n  delete cleanCopy.filename\n  delete cleanCopy.validationSummary\n  return cleanCopy\n}\n\nexport const resetValidation = product => {\n  const cleanCopy = {...product}\n  delete cleanCopy.validationSummary\n  return cleanCopy\n}\n\nexport const _saveProduct = (removeHelperFields, dataDir, product) => {\n  const {filename} = product\n  const cleanProduct = removeHelperFields(product)\n  jsonfile.writeFileSync(`${dataDir}/prods/${filename}`, cleanProduct, {\n    spaces: 2\n  })\n}\n\n// Hey future me: what's the (dis)advantage of doing this vs. just using\n// _removeHelperFields from the enclosiong scope? It's not a pure function\n// anyway because it saves a file which is an obvious side effect...\nconst curriedSaveProduct = curry(_saveProduct)\nexport const saveProduct = curriedSaveProduct(removeHelperFields)\n\nexport const saveAllProducts = (dataDir, prods) => {\n  jsonfile.writeFileSync(`${dataDir}/prods.all.json`, prods, {spaces: 2})\n}\n\nconst _saveAllProductsToCsv = (fields, dataDir, prods) => {\n  const filename = 'EDB_Products-Export.csv'\n  const result = json2csv({data: prods, fields: fields})\n  fs.writeFileSync(`${dataDir}/${filename}`, result)\n  return result\n}\n\nexport const saveAllProductsToCsv = curry(_saveAllProductsToCsv)\n"]}